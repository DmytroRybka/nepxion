package com.nepxion.util.io;

/**
 * <p>Title: Nepxion Utility</p>
 * <p>Description: Nepxion Utility Repository</p>
 * <p>Copyright: Copyright (c) 2010</p>
 * <p>Company: Nepxion</p>
 * @author Neptune
 * @email hj_ren@msn.com
 * @version 1.0
 */

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.GZIPInputStream;

public class ZipUtil
{	
	/**
	 * Get zip file list
	 * @param filePath     the file path
	 * @param classLoader  the flag whether the inputStream is generated by classLoader
	 * @return             the instance of List
	 */	
	public static List getZipFileList(String filePath, boolean classLoader)
	{
		return getZipFileList(filePath, "GB2312", classLoader);
	}
	
	/**
	 * Get zip file list
	 * @param filePath     the file path
	 * @param charsetName  the charset name
	 * @param classLoader  the flag whether the inputStream is generated by classLoader
	 * @return             the instance of List
	 */
	public static List getZipFileList(String filePath, String charsetName, boolean classLoader)
	{
		try
		{
			BufferedReader bufferedReader = getZipReader(filePath, charsetName, classLoader);
			if (bufferedReader == null)
			{
				return null;
			}
			
			List list = new ArrayList();
			while (true)
			{
				String line = bufferedReader.readLine();
				if (line == null || line.length() == 0)
				{
					break;
				}
				list.add(line);
			}
			return list;
		}
		catch (IOException e)
		{
			e.printStackTrace();
		}
		return null;
	}
	
	/**
	 * Get zip reader
	 * @param filePath     the file path
	 * @param classLoader  the flag whether the inputStream is generated by classLoader
	 * @return             the instance of BufferedReader
	 */	
	public static BufferedReader getZipReader(String filePath, boolean classLoader)
	{
		return getZipReader(filePath, "GB2312", classLoader);
	}
	
	/**
	 * Get zip reader
	 * @param filePath     the file path
	 * @param charsetName  the charset name
	 * @param classLoader  the flag whether the inputStream is generated by classLoader
	 * @return             the instance of BufferedReader
	 */
	public static BufferedReader getZipReader(String filePath, String charsetName, boolean classLoader)
	{
		try
		{
			InputStream inputStream = null;
			if (classLoader)
			{
				inputStream = ZipUtil.class.getClassLoader().getResourceAsStream(filePath);
			}
			else
			{
				inputStream = new FileInputStream(filePath);
			}
			
			if (inputStream == null)
			{
				return null;
			}
			
			InputStream zipInputStream = new GZIPInputStream(inputStream);
			return new BufferedReader(new InputStreamReader(zipInputStream, charsetName));
		}
		catch (FileNotFoundException e)
		{
			e.printStackTrace();
		}
		catch (UnsupportedEncodingException e)
		{
			e.printStackTrace();
		}
		catch (IOException e)
		{
			e.printStackTrace();
		}
		return null;
	}
}